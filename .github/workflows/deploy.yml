name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger on push to the main branch. You can change this to any branch you want.
  workflow_dispatch:  # Allows manual triggering
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Java 21
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '21'
    
    - name: Build the Jars
      run: | 
        sudo apt update
        sudo apt install maven -y
        cd ./userservice1
        mvn clean install -D skipTests
        cd ../
        cd ./userservice2
        mvn clean install -D skipTests
        cd ../
        cd ./orderservice
        mvn clean install -D skipTests
        cd ../
        cd ./apigateway
        mvn clean install -D skipTests
        cd ../

    # Set up SSH key to authenticate with EC2
    # - name: Set up SSH key
    #   uses: webfactory/ssh-agent@v0.5.3
    #   with:
    #     ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}#

    # Deploy to VM via SSH
    - name: Deploy to VM
      env:
        SSH_PRIVATE_KEY: ${{ secrets.AZURE_SSH_PRIVATE_KEY }} 
      run: |
        echo "$SSH_PRIVATE_KEY" > azure_key.pem
        chmod 400 azure_key.pem

        ssh -o StrictHostKeyChecking=no -i azure_key.pem azureuser@${{ secrets.AZURE_IP_ADDRESS }} "rm -rf /home/ubuntu/app && exit"
        ssh -o StrictHostKeyChecking=no -i azure_key.pem azureuser@${{ secrets.AZURE_IP_ADDRESS }} "mkdir -p /home/ubuntu/app && exit"
        scp -o StrictHostKeyChecking=no -i azure_key.pem -r ./* azureuser@${{ secrets.AZURE_IP_ADDRESS }}:/home/ubuntu/app/
        ssh -o StrictHostKeyChecking=no -i azure_key.pem azureuser@${{ secrets.AZURE_IP_ADDRESS }} "rm -rf /home/ubuntu/app/azure_key.pem && exit"
        
        # Use SSH to execute commands on your EC2 instance
        ssh -o StrictHostKeyChecking=no -i azure_key.pem azureuser@${{ secrets.AZURE_IP_ADDRESS }} << 'EOF'
          echo "Deploying application to EC2..."
          cd /home/ubuntu/myapp || exit 1  # Go to your app directory
          # sudo snap install docker
          # sudo sleep 5
          sudo docker-compose up -d
          echo "Deployment complete!"
        EOF
        rm azure_key.pem  # Clean up the temporary file
